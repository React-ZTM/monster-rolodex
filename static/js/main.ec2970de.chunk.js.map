{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-field/search-field.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","item","imageSrc","alt","name","email","CardList","items","length","map","id","SearchField","placeholder","type","onChange","handleChange","App","arguments","e","setState","searchValue","target","value","toLowerCase","state","monsters","fetch","then","response","json","forEach","monster","this","filter","includes","class","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAEaA,G,YAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAMG,KAAKC,SAAUC,IAAI,YACnC,6BAAKL,EAAMG,KAAKG,OAChB,4BACKN,EAAMG,KAAKI,aCMbC,MAXf,SAAkBR,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,MAAMC,OACHV,EAAMS,MAAME,KAAI,SAACR,GAAD,OAAU,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKS,OAC1C,wD,MCAf,IAAMC,EANb,SAAsBb,GAClB,OACI,uBAAOC,UAAU,SAASa,YAAad,EAAMc,YAAaC,KAAK,OAAOC,SAAYhB,EAAMiB,gBCsCjFC,G,wDApCX,aAAc,IAAD,8BACT,eAASC,YAMbF,aAAe,SAACG,GACZ,EAAKC,SAAS,CACVC,YAAaF,EAAEG,OAAOC,MAAMC,iBAPhC,EAAKC,MAAQ,CACTC,SAAS,GACTL,YAAY,IAJP,E,gEAYO,IAAD,OACfM,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACF,GACHA,EAASK,SAAQ,SAACC,GACdA,EAAQ7B,SAAR,+BAA2C6B,EAAQrB,GAAnD,6BAEJ,EAAKS,SAAS,CACVM,kB,+BAIP,IAAD,OACAA,EAAWO,KAAKR,MAAMC,SAASQ,QAAO,SAACF,GAAD,OAAYA,EAAQ3B,KAAKmB,cAAcW,SAAS,EAAKV,MAAMJ,gBACrG,OACI,sBAAKrB,UAAU,MAAf,UACI,oBAAIoC,MAAM,QAAV,8BACA,cAACxB,EAAD,CAAaC,YAAY,oBAAoBG,aAAciB,KAAKjB,eAChE,cAAC,EAAD,CAAUR,MAAOkB,W,GA/BfW,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec2970de.chunk.js","sourcesContent":["import './card.styles.css';\n\nexport const Card = (props) =>{\n    return (\n        <div className=\"card-container\"> \n            <img src={props.item.imageSrc} alt=\"Monster\"/>\n            <h3>{props.item.name}</h3>\n            <p>\n                {props.item.email} \n            </p>\n        </div>\n    )\n}\n","import './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nfunction CardList(props){\n    return (\n        <div className=\"card-list\">\n            {props.items.length \n                    ? props.items.map((item) => <Card key={item.id} item={item}/>)\n                    : <div>No Cards To Show!!</div>\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import './search-field.styles.css';\n\nfunction _SearchField(props){\n    return (\n        <input className=\"search\" placeholder={props.placeholder} type=\"text\" onChange = {props.handleChange} />\n    )\n}\n\nexport const SearchField = _SearchField;","import React,  {Component} from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport {SearchField} from './components/search-field/search-field.component';\nimport './App.css';\n\nclass App extends Component{\n    constructor(){\n        super(...arguments);\n        this.state = {\n            monsters:[],\n            searchValue:''\n        }\n    }\n    handleChange = (e) => {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    componentDidMount(){\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response)=>response.json())\n            .then((monsters)=>{\n                monsters.forEach((monster)=>{\n                    monster.imageSrc = `https://robohash.org/${monster.id}?set=set2&size=180x180`;\n                });\n                this.setState({\n                    monsters\n                });\n            });\n    }\n    render(){\n        let monsters = this.state.monsters.filter((monster)=> monster.name.toLowerCase().includes(this.state.searchValue));\n        return(\n            <div className=\"App\">\n                <h1 class=\"title\">Monsters Rolodex</h1>\n                <SearchField placeholder=\"Search Monsters!!\" handleChange={this.handleChange}/>\n                <CardList items={monsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}